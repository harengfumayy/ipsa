import math as m 
import fonctions as f 

def g(x):
    x=(m.sin(x)+1)/2
    return x

def PointFixe(g,x0,epsilon,Nitermax):
    n = 0
    xold = x0
    xnew = g(xold)
    dif = abs(xold - xnew)
    while dif > epsilon and n < Nitermax :
        n+=1
        xnew = g(xold)
        dif = abs(xold - xnew)
        xold = xnew
        print(n, xnew)
    return xnew

def g(x):
    return (m.sin(x)+1)/2

def g0(x):
    return (1+m.sin(x))/2

def g1(x):
    return (9-3*x)**(1/4)

def g2(x):
    return m.acos((x+2)/3)

def g3(x):
    return m.log(7/x)

def g4(x):
    return m.exp(x)-10

def g5(x):
    return m.atan((x+5)/2)

def g6(x):
    return m.log((x**2)+3)

def g7(x):
    return (7-4*m.log(x))/3

def g8(x):
    return 

def g8bis(x):
    return -((2*(x**2)-(4*x)+17)**0.25) 

def g9(x):
    return log(2*sin(x)+7)

def g10(x):
    return log(10)-log(log(x**2+4))

print(PointFixe(g2, 1, 1e-10, 50))
